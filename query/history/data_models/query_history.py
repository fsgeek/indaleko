"""
This module defines the data model for the Indaleko data object.

Project Indaleko
Copyright (C) 2024-2025 Tony Mason

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
"""
This module defines the data model for the Indaleko data object.

Project Indaleko
Copyright (C) 2024-2025 Tony Mason

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
"""
import os
import sys

from typing import List, Optional, Dict, Any

from pydantic import Field
from icecream import ic

if os.environ.get('INDALEKO_ROOT') is None:
    current_path = os.path.dirname(os.path.abspath(__file__))
    while not os.path.exists(os.path.join(current_path, 'Indaleko.py')):
        current_path = os.path.dirname(current_path)
    os.environ['INDALEKO_ROOT'] = current_path
    sys.path.append(current_path)


# pylint: disable=wrong-import-position
from data_models.base import IndalekoBaseModel
from data_models.record import IndalekoRecordDataModel
from data_models.i_uuid import IndalekoUUIDDataModel
# pylint: enable=wrong-import-position

class IndalekoQueryEventDataModel(IndalekoBaseModel):
    '''
    This class defines the data model for the Indaleko query event.  A "query event"
    is a record of a query that was executed against the Indaleko system.
    '''
    Record : IndalekoRecordDataModel = Field(None,
                                    title='Record',
                                    description='The record associated with the object.')

    QueryIdentifier : IndalekoUUIDDataModel = Field(None,
                                    title='QueryIdentifier',
                                    description='The identifier for the query event.')

    OriginalQuery : str = Field(None,
                                title='OriginalQuery',
                                description='The original query that was executed.')

    SystemPrompt : Optional[str] = Field(None,
                                        title='SystemPrompt',
                                        description='The system prompt that was used to generate the query.')

    GeneratedQuery : Optional[str] = Field(None,
                                        title='GeneratedQuery',
                                        description='The query that was generated by the system.')
    ExecutionTime : float = Field(None,
                                      title='ExecutionTime',
                                        description='The time taken to execute the query.')

    Result : Optional[str] = Field(None,
                                    title='Result',
                                    description='The result of the query.')

    ResultCount : int = Field(None,
                                title='ResultCount',
                                description='The number of results returned by the query.')

    MetadataFields : List[str] = Field(None,
                                           title='MetadataFields',
                                            description='The metadata fields used in the query.')

    UserCPUTime: Optional[float] = Field(None,
                                        title='UserCPUTime',
                                        description='The user CPU time used by the query.')

    SystemCPUTime: Optional[float] = Field(None,
                                            title='SystemCPUTime',
                                            description='The system CPU time used by the query.')

    MemoryUsage: Optional[int] = Field(None,
                                           title='MemoryUsage',
                                            description='The memory usage of the query.')

    AdditionalMetrics: Optional[Dict[str, Any]] = Field(None,
                                                        title='AdditionalMetrics',
                                                        description='Any additional metrics associated with the query.')

    Archived: bool = Field(default=False,
                            title='Archived',
                            description='Flag indicating if the query is archived.')


    class Config:
        json_schema_extra = {
            "example": {
                "Record": IndalekoRecordDataModel.Config.json_schema_extra['example'],
                "QueryIdentifier": IndalekoUUIDDataModel.Config.json_schema_extra['example'],
                "OriginalQuery": "SELECT * FROM table",
                "SystemPrompt": "SELECT * FROM table",
                "GeneratedQuery": "SELECT * FROM table",
                "ExecutionTime": 0.1,
                "Result": "Result",
                "ResultCount": 1,
                "MetadataFields": ["field1", "field2"],
                "UserCPUTime": 0.1,
                "SystemCPUTime": 0.1,
                "MemoryUsage": 100,
                "AdditionalMetrics": {"metric1": 1, "metric2": 2},
                "Archived": False
            }
        }


def main():
    '''This allows testing the data model.'''
    ic('Testing IndalekoObjectDataModel')
    IndalekoQueryEventDataModel.test_model_main()

if __name__ == '__main__':
    main()
